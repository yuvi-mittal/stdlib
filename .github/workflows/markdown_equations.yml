#/
# @license Apache-2.0
#
# Copyright (c) 2021 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: markdown_equations

# Workflow triggers:
on:
  schedule:
    # Run the workflow once a day at 2:00 AM UTC:
    - cron: '0 2 * * *'

  # Allow the workflow to be manually run:
  workflow_dispatch:

# Global permissions:
permissions:
  # Allow read-only access to the repository contents:
  contents: read

# Workflow jobs:
jobs:

  # Define a job for updating equations in Markdown files...
  update:

    # Define a display name:
    name: 'Update equations'

    # Ensure the job does not run on forks:
    if: github.repository == 'stdlib-js/stdlib'

    # Define the type of virtual host machine:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:

      # Checkout the repository:
      - name: 'Checkout repository'
        # Pin action to full length commit SHA
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # Specify whether to remove untracked files before checking out the repository:
          clean: true

          # Limit clone depth to the most recent 100 commits:
          fetch-depth: 100

          # Specify whether to download Git-LFS files:
          lfs: false

          # Avoid storing GitHub token in local Git configuration:
          persist-credentials: false
        timeout-minutes: 10

      # Install Node.js:
      - name: 'Install Node.js'
        # Pin action to full length commit SHA
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: '20' # 'lts/*'
        timeout-minutes: 5

      # Install dependencies (accounting for possible network failures, etc, when installing node module dependencies):
      - name: 'Install dependencies'
        run: |
          make install-node-modules || make install-node-modules || make install-node-modules
        timeout-minutes: 15

      # Initialize development environment:
      - name: 'Initialize development environment'
        run: |
          make init
        timeout-minutes: 5

      # Configure Git:
      - name: 'Configure Git'
        run: |
          git config --local user.email "82920195+stdlib-bot@users.noreply.github.com"
          git config --local user.name "stdlib-bot"
        timeout-minutes: 5

      # Import GPG key to sign commits:
      - name: 'Import GPG key to sign commits'
        # Pin action to full length commit SHA
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ secrets.STDLIB_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.STDLIB_BOT_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # Generate list of changed Markdown files:
      - name: 'Find changed Markdown files'
        run: |
          echo "files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} -G '<equation' | grep .md | tr '\n' ' ')" >> $GITHUB_OUTPUT
        id: changed

      # Generate SVG equations:
      - name: 'Generate SVG equations'
        id: svg-equations
        run: |
          make markdown-svg-equations-files FILES="${{ steps.changed.outputs.files }}"

          if [[ -z "$(git status --porcelain)" ]]; then
            # If no files were changed, exit with a success status code:
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          else
            # Otherwise, add changed files to the staging area and commit:
            git add -A && git commit -m "docs: update Markdown equation SVGs"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
        timeout-minutes: 15

      # Update Markdown equation elements:
      - name: 'Update equation elements'
        id: equation-elements
        run: |
          make markdown-img-equations-files FILES="${{ steps.changed.outputs.files }}"
          make markdown-img-equations-src-urls-files FILES="${{ steps.changed.outputs.files }}"

          if [[ -z "$(git status --porcelain)" ]]; then
            # If no files were changed, exit with a success status code:
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          else
            # Otherwise, add changed files to the staging area and commit:
            git add -A && git commit -m "docs: update Markdown equation elements"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
        timeout-minutes: 15

      # Create a pull request with the updated equations:
      - name: 'Create pull request'
        id: cpr
        if: steps.svg-equations.outputs.changed == 'true' || steps.equation-elements.outputs.changed == 'true'
        # Pin action to full length commit SHA
        uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f # v7.0.6
        with:
          title: 'docs: update Markdown equation elements'
          body: |
            This PR

            -   updates equation elements found in Markdown files

          commit-message: 'docs: update Markdown equation elements'
          committer: 'stdlib-bot <82920195+stdlib-bot@users.noreply.github.com>'
          signoff: true
          token: ${{ secrets.STDLIB_BOT_FGPAT_PR_WRITE }}
          labels: |
            documentation
            automated-pr
          team-reviewers: |
            reviewers
          branch: markdown-insert-equations
          delete-branch: true

      # Create Markdown summary of the pull request:
      - name: 'Create summary'
        if: steps.svg-equations.outputs.changed == 'true' || steps.equation-elements.outputs.changed == 'true'
        run: |
          echo "# :tada: Pull Request created! :tada:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Pull request ${{ steps.cpr.outputs.pull-request-number }} was successfully ${{ steps.cpr.outputs.pull-request-operation }}."
          echo ":link: [${{ steps.cpr.outputs.pull-request-url }}](${{ steps.cpr.outputs.pull-request-url }})." >> $GITHUB_STEP_SUMMARY
          echo "Head SHA: [${{ steps.cpr.outputs.pull-request-head-sha }}](${{ steps.cpr.outputs.pull-request-url }}/commits/${{ steps.cpr.outputs.pull-request-head-sha }})." >> $GITHUB_STEP_SUMMARY
